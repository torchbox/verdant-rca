# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import wagtail.wagtailadmin.taggable
import wagtail.wagtailimages.models
import wagtail.wagtailcore.fields
import modelcluster.fields
import django.db.models.deletion
from django.conf import settings
import taggit.managers
import modelcluster.contrib.taggit


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailimages', '0005_make_filter_spec_unique'),
        ('taggit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('wagtailcore', '0010_change_page_owner_to_null_on_delete'),
        ('wagtaildocs', '0002_initial_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Advert',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('url', models.URLField(help_text=b'', null=True, blank=True)),
                ('text', models.CharField(help_text=b'bold text', max_length=255)),
                ('plain_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('show_globally', models.BooleanField(default=False, help_text=b'')),
            ],
            options={
                'permissions': (('change_advert', 'Can edit adverts'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AdvertPlacement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('advert', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AlumniIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='AlumniIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.AlumniIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AlumniIndexRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='AlumniPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('school', models.CharField(help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('year', models.CharField(help_text=b'', max_length=4, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('listing_intro', models.CharField(help_text=b'Used only on pages displaying a list of pages of this type', max_length=100, blank=True)),
                ('biography', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ContactSnippet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text=b'This is the reference name for the contact. This is not displayed on the frontend.', max_length=255)),
                ('contact_title', models.CharField(help_text=b'This is the optional title, displayed on the frontend', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
            ],
            options={
                'permissions': (('change_contactsnippet', 'Can edit contact snippets'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactSnippetEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.ContactSnippet')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactSnippetPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.ContactSnippet')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactSnippetPlacement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('contact_snippet', models.ForeignKey(related_name='+', to='rca.ContactSnippet', help_text=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ContactUsPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='CurrentResearchPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='CurrentResearchPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.CurrentResearchPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CustomContentModule',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(help_text=b'', max_length=255)),
            ],
            options={
                'permissions': (('change_customcontentmodule', 'Can edit custom content modules'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CustomContentModuleBlock',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('item_title', models.CharField(help_text=b'', max_length=255)),
                ('text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('content_module', modelcluster.fields.ParentalKey(related_name='blocks', to='rca.CustomContentModule')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CustomeContentModulePlacement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('custom_content_module', models.ForeignKey(related_name='+', to='rca.CustomContentModule', help_text=b'')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DonationPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('payment_description', models.CharField(help_text=b'This value will be stored along with each donation made on this page to help ditinguish them from donations on other pages.', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('strapline', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('middle_column_body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
            ],
            options={
                'verbose_name': 'RCA USA Stripe donation page',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.EventIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventIndexRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('audience', models.CharField(help_text=b'', max_length=255, choices=[(b'public', b'Public'), (b'rcaonly', b'RCA only'), (b'openday', b'Open Day'), (b'rcatalks', b'RCA talks'), (b'rcaalumnionly', b'RCA Alumni Only')])),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA'), (b'alumnirca', b'AlumniRCA')])),
                ('location', models.CharField(help_text=b'', max_length=255, choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea'), (b'collegewide', b'College-wide'), (b'other', b'Other/External (enter below)')])),
                ('location_other', models.CharField(help_text=b'', max_length=255, verbose_name=b"'Other' location", blank=True)),
                ('specific_directions', models.CharField(help_text=b'Brief, more specific location e.g Go to reception on 2nd floor', max_length=255, blank=True)),
                ('specific_directions_link', models.URLField(help_text=b'', blank=True)),
                ('gallery', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'RCA galleries and rooms', choices=[(b'courtyardgalleries', b'Courtyard Galleries'), (b'cwadseminarroom', b'Critical Writing in Art & Design Seminar Room'), (b'ccaseminarroom', b'Curating Contemporary Art Seminar Room'), (b'danacentre', b'Dana Centre'), (b'drawingstudio', b'Drawing Studio'), (b'dysonbuilding', b'Dyson Building'), (b'gorvylecturetheatre', b'Gorvy Lecture Theatre'), (b'henrymooregallery', b'Henry Moore Gallery'), (b'humanitiesseminarroom', b'Humanities Seminar Room'), (b'jaymewsgallery', b'Jay Mews Gallery'), (b'lecturetheatre1', b'Lecture Theatre 1'), (b'lecturetheatre2', b'Lecture Theatre 2'), (b'library', b'Library'), (b'linkgallery', b'Link Gallery'), (b'lowergulbenkiangallery', b'Lower Gulbenkian Gallery'), (b'movingimagestudio', b'Moving Image Studio'), (b'palstevensbuilding', b'PAL, Stevens Building'), (b'photographystudios', b'Photography Studios'), (b'printmakingstudios', b'Printmaking Studios'), (b'sacklerbuilding', b'Sackler Building'), (b'senior-common-room', b'Senior Common Room'), (b'sculpturebuilding', b'Sculpture Building'), (b'studiorca', b'StudioRCA'), (b'testbed1', b'Testbed 1'), (b'uppergulbenkiangallery', b'Upper Gulbenkian Gallery')])),
                ('special_event', models.BooleanField(default=False, help_text=b'Toggling this is a quick way to remove/add an event from signage without deleting the screens defined below', verbose_name=b'Highlight as special event on signage')),
                ('cost', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('eventbrite_id', models.CharField(help_text=b'Must be a ten-digit number. You can find for you event ID by logging on to Eventbrite, then going to the Manage page for your event. Once on the Manage page, look in the address bar of your browser for eclass=XXXXXXXXXX. This ten-digit number after eclass= is the event ID.', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('listing_intro', models.CharField(help_text=b'Used only on pages listing event items', max_length=100, blank=True)),
                ('middle_column_body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('contact_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('external_link', models.URLField(editable=False, blank=True)),
                ('external_link_text', models.CharField(max_length=255, editable=False, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventItemCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemContactEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.EventItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemContactPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.EventItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemDatesTimes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('date_from', models.DateField(help_text=b'', verbose_name=b'Start date')),
                ('date_to', models.DateField(help_text=b'Not required if event is on a single day', null=True, verbose_name=b'End date', blank=True)),
                ('time_from', models.TimeField(help_text=b'', null=True, verbose_name=b'Start time', blank=True)),
                ('time_to', models.TimeField(help_text=b'', null=True, verbose_name=b'End time', blank=True)),
                ('time_other', models.CharField(help_text=b'Use this field to give additional information about start and end times', max_length=255, verbose_name=b'Time other', blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='dates_times', to='rca.EventItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemExternalLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='external_links', to='rca.EventItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemRelatedArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA'), (b'alumnirca', b'AlumniRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_areas', to='rca.EventItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemRelatedProgramme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_programmes', to='rca.EventItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemRelatedSchool',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_schools', to='rca.EventItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemScreen',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('screen', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'darwin-albert-hall', b'Darwin Albert Hall'), (b'darwin-jay-mews', b'Darwin Jay Mews'), (b'stevens', b'Stevens'), (b'dyson-hester-road', b'Dyson Hester Road'), (b'dyson-howie-street', b'Dyson Howie Street'), (b'sculpture', b'Sculpture'), (b'sackler', b'Sackler'), (b'common-room-block', b'Common Room Block'), (b'test-screen', b'Test screen')])),
                ('page', modelcluster.fields.ParentalKey(related_name='screens', to='rca.EventItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='EventItemSpeaker',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'', max_length=255)),
                ('surname', models.CharField(help_text=b'', max_length=255)),
                ('link', models.URLField(help_text=b'', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='GalleryPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='GalleryPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('packery_news', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of news items to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_staff', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of staff to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_student_work', models.IntegerField(blank=True, help_text=b'Student pages flagged to Show On Homepage must have at least one carousel item', null=True, verbose_name=b'Number of student work items to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_tweets', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of tweets to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_rcanow', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of RCA Now items to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_research', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of research items to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_alumni', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of alumni to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_review', models.IntegerField(blank=True, help_text=b'', null=True, verbose_name=b'Number of reviews to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_events', models.IntegerField(help_text=b'', null=True, verbose_name=b'Number of events to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('packery_blog', models.IntegerField(help_text=b'', null=True, verbose_name=b'Number of blog items to show', choices=[(0, 0), (1, 1), (2, 2), (3, 3), (4, 4), (5, 5)])),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='HomePageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.HomePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HomePageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='HomePageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InnovationRCAIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'verbose_name': 'InnovationRCA Project Index',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='InnovationRCAIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.InnovationRCAIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InnovationRCAProject',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('subtitle', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('year', models.CharField(help_text=b'', max_length=4, blank=True)),
                ('description', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('project_type', models.CharField(help_text=b'', max_length=255, choices=[(b'startup', b'Start-up'), (b'fellowship', b'Fellowship')])),
                ('project_ended', models.BooleanField(default=False, help_text=b'')),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
            ],
            options={
                'verbose_name': 'InnovationRCA Project',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='InnovationRCAProjectCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InnovationRCAProjectCreator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('manual_person_name', models.CharField(help_text=b'Only required if the creator has no page of their own to link to', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='creator', to='rca.InnovationRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='InnovationRCAProjectLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('link_text', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='links', to='rca.InnovationRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JobPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('programme', models.CharField(blank=True, max_length=255, null=True, help_text=b'', choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('school', models.CharField(blank=True, max_length=255, null=True, help_text=b'', choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('other_department', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('closing_date', models.DateField(help_text=b'')),
                ('interview_date', models.DateField(help_text=b'', null=True, blank=True)),
                ('responsible_to', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('required_hours', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('campus', models.CharField(blank=True, max_length=255, null=True, help_text=b'', choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea')])),
                ('salary', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('ref_number', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('grade', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('description', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('listing_intro', models.CharField(help_text=b'Used only on pages listing jobs', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('download_info', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtaildocs.Document', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='JobPageReusableTextSnippet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='reusable_text_snippets', to='rca.JobPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JobsIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='JobsIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.JobsIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='JobsIndexRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewsIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.NewsIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsItem',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('author', models.CharField(help_text=b'', max_length=255)),
                ('date', models.DateField(help_text=b'')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('show_on_news_index', models.BooleanField(default=True, help_text=b'')),
                ('listing_intro', models.CharField(help_text=b'Used only on pages listing news items', max_length=100, blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, editable=False, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewsItemArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.CharField(help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='areas', to='rca.NewsItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsItemCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsItemLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('link_text', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='related_links', to='rca.NewsItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsItemRelatedProgramme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_programmes', to='rca.NewsItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewsItemRelatedSchool',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_schools', to='rca.NewsItem')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('first_name', models.CharField(help_text=b'', max_length=255)),
                ('last_name', models.CharField(help_text=b'', max_length=255)),
                ('statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'Brief description of your practice and interests as an artist/designer', blank=True)),
                ('twitter_handle', models.CharField(help_text=b'Twitter handle without the @ symbol', max_length=255, blank=True)),
                ('funding', models.CharField(help_text=b'Include scholarships or major funding bodies, including research councils', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(default=False, help_text=b'')),
                ('innovation_rca_fellow', models.BooleanField(default=False, help_text=b'Tick this box only if you are currently an InnovationRCA Fellow')),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ma_school', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'School', choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('ma_programme', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Programme', choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('ma_graduation_year', models.CharField(help_text=b'', max_length=4, verbose_name=b'Graduation year', blank=True)),
                ('ma_specialism', models.CharField(blank=True, help_text=b'Only complete for Fashion (Knitwear; Accessories, Footwear and Millinery) Textiles (Knit; Mixed-media; Print, Weave) or Fine Art (Performance; Moving Image)', max_length=255, verbose_name=b'Specialism', choices=[(b'ads1', b'ADS1'), (b'ads2', b'ADS2'), (b'ads3', b'ADS3'), (b'ads4', b'ADS4'), (b'ads5', b'ADS5'), (b'ads6', b'ADS6'), (b'ads7', b'ADS7'), (b'ads9', b'ADS9'), (b'knit', b'Knit'), (b'mixed media', b'Mixed media'), (b'print', b'Print'), (b'weave', b'Weave'), (b'performance', b'Performance'), (b'movingimage', b'Moving Image'), (b'platform13', b'Platform 13'), (b'platform14', b'Platform 14'), (b'platform15', b'Platform 15'), (b'platform17', b'Platform 17'), (b'platform18', b'Platform 18'), (b'platform21', b'Platform 21'), (b'footwear-accessories-millinery', b'Footwear, Accessories & Millinery')])),
                ('ma_in_show', models.BooleanField(default=False, help_text=b"Tick for MA students in this year's Show ", verbose_name=b'In show')),
                ('show_work_title', models.CharField(help_text=b'The title of your MA Show work/project. CWA&D and History of Design students should enter their dissertation titles. CCA Students should enter their exhibition title.', max_length=255, verbose_name=b'Dissertation/project title', blank=True)),
                ('show_work_type', models.CharField(blank=True, help_text=b"CWA&D and History of Design students should select 'dissertation'. All other students should select 'project'.", max_length=255, verbose_name=b'Work type', choices=[(b'dissertation', b'Dissertation'), (b'major-project', b'Major project')])),
                ('show_work_location', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Work location', choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea')])),
                ('show_work_description', wagtail.wagtailcore.fields.RichTextField(help_text=b'Description of your work or project featured in the show', blank=True)),
                ('mphil_school', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'School', choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('mphil_programme', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Programme', choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('mphil_start_year', models.CharField(help_text=b'The year you began your MPhil', max_length=4, verbose_name=b'Start year', blank=True)),
                ('mphil_graduation_year', models.CharField(help_text=b'', max_length=4, verbose_name=b'Graduation year', blank=True)),
                ('mphil_work_location', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Work location', choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea')])),
                ('mphil_dissertation_title', models.CharField(help_text=b'', max_length=255, verbose_name=b'Dissertation title', blank=True)),
                ('mphil_statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'Description of your MPhil dissertation or project', blank=True)),
                ('mphil_in_show', models.BooleanField(default=False, help_text=b"Please tick only if you're an MPhil in the Show this year", verbose_name=b'In show')),
                ('mphil_status', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Status', choices=[(b'fulltime', b'Full time'), (b'parttime', b'Part time')])),
                ('mphil_degree_type', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Degree type', choices=[(b'practicebased', b'Practice based'), (b'thesisonly', b'Thesis only')])),
                ('phd_school', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'School', choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('phd_programme', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Programme', choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('phd_start_year', models.CharField(help_text=b'The year you began your PhD', max_length=4, verbose_name=b'Start year', blank=True)),
                ('phd_graduation_year', models.CharField(help_text=b'', max_length=4, verbose_name=b'Graduation year', blank=True)),
                ('phd_work_location', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Work location', choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea')])),
                ('phd_dissertation_title', models.CharField(help_text=b'', max_length=255, verbose_name=b'Dissertation title', blank=True)),
                ('phd_statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'Description of your PhD dissertation or project', blank=True)),
                ('phd_in_show', models.BooleanField(default=False, help_text=b'Please tick only if you are a PhD student in the Show this year', verbose_name=b'In show')),
                ('phd_status', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Status', choices=[(b'fulltime', b'Full time'), (b'parttime', b'Part time')])),
                ('phd_degree_type', models.CharField(blank=True, help_text=b'', max_length=255, verbose_name=b'Degree type', choices=[(b'practicebased', b'Practice based'), (b'thesisonly', b'Thesis only')])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='NewStudentPageAward',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('award', models.CharField(help_text=b'Include prize, award title and year, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='awards', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageConference',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'Include paper title, conference, institution, date, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='conferences', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageContactsEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email', models.EmailField(help_text=b'You can use your personal email as well as firstname.surname@network.rca.ac.uk', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='emails', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageContactsPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone', models.CharField(help_text=b'UK mobile e.g. 07XXX XXXXXX or overseas landline, e.g. +33 (1) XXXXXXX', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='phones', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageContactsWebsite',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('website', models.URLField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='websites', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageExhibition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('exhibition', models.CharField(help_text=b'Include exhibition title, gallery, city and year, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='exhibitions', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageExperience',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('experience', models.CharField(help_text=b'Include job title, company name, city and year(s), separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='experiences', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageMPhilCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageMPhilCollaborator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b"Include collaborator's name and programme (if RCA), separated by commas", max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='mphil_collaborators', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageMPhilSponsor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'List companies and individuals that have provided financial or in kind sponsorship for your final project, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='mphil_sponsors', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageMPhilSupervisor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('supervisor_other', models.CharField(help_text=b'Any external supervisors, or RCA supervisors without a staff page', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='mphil_supervisors', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePhDCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePhDCollaborator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b"Include collaborator's name and programme (if RCA), separated by commas", max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='phd_collaborators', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePhDSponsor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'List companies and individuals that have provided financial or in kind sponsorship for your final project, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='phd_sponsors', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePhDSupervisor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('supervisor_other', models.CharField(help_text=b'Any external supervisors, or RCA supervisors without a staff page', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='phd_supervisors', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePreviousDegree',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('degree', models.CharField(help_text=b'Include degree level, subject, institution name and year of graduation, separated by commas e.g. BA Fine Art, University of Brighton, 2011', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='previous_degrees', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPagePublication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'Include author (if not you), article title, joutnal title, issue number, year, pages, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='publications', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageShowCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageShowCollaborator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b"Include collaborator's name and programme (if RCA), separated by commas", max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='show_collaborators', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='NewStudentPageShowSponsor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'List companies and individuals that have provided financial or in kind sponsorship for your final project, separated by commas', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='show_sponsors', to='rca.NewStudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='OEFormPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('form_id', models.CharField(help_text=b'The long number in brackets from the generated JavaScript snippet', max_length=255)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('strapline', models.CharField(max_length=255, blank=True)),
                ('middle_column_body', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('show_on_homepage', models.BooleanField()),
                ('data_protection', wagtail.wagtailcore.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PressRelease',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('author', models.CharField(help_text=b'', max_length=255)),
                ('date', models.DateField(help_text=b'')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('listing_intro', models.CharField(help_text=b'Used only on pages listing news items', max_length=100, blank=True)),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, editable=False, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PressReleaseArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.CharField(help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='areas', to='rca.PressRelease')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PressReleaseCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PressReleaseIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='PressReleaseIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.PressReleaseIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PressReleaseLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('link_text', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='related_links', to='rca.PressRelease')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PressReleaseRelatedProgramme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_programmes', to='rca.PressRelease')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PressReleaseRelatedSchool',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='related_schools', to='rca.PressRelease')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammeDocuments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('document', models.ForeignKey(related_name='+', blank=True, to='wagtaildocs.Document', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('collapse_upcoming_events', models.BooleanField(default=False, help_text=b'')),
                ('school', models.CharField(help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('head_of_programme_statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, verbose_name=b'Head(s) of programme statement', blank=True)),
                ('programme_video', models.CharField(help_text=b"The web addres for the programme video on Vimeo. For example, 'http://vimeo.com/62715625'.", max_length=255, verbose_name=b'Programme video Vimeo address', blank=True)),
                ('contact_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle, hashtag or search term', max_length=255, blank=True)),
                ('facilities_text', wagtail.wagtailcore.fields.RichTextField(null=True, editable=False, blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammePageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ProgrammePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageContactEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.ProgrammePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageContactPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.ProgrammePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageFacilitiesCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('facilities_text', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageManualStaffFeed',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('staff_role', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_staff_feed', to='rca.ProgrammePage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageOurSites',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('url', models.URLField(help_text=b'')),
                ('site_name', models.CharField(help_text=b'', max_length=255)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageProgramme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('page', modelcluster.fields.ParentalKey(related_name='programmes', to='rca.ProgrammePage')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ProgrammePageStudentStory',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(help_text=b'', max_length=255)),
                ('text', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaBlogIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
            ],
            options={
                'verbose_name': 'Blog Index',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RcaBlogPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('author', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('date', models.DateField(help_text=b'', verbose_name=b'Creation date')),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, editable=False, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
            ],
            options={
                'verbose_name': 'Blog Page',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RcaBlogPageArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.CharField(help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='areas', to='rca.RcaBlogPage')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaBlogPagePageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaBlogPageTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('content_object', modelcluster.fields.ParentalKey(related_name='tagged_items', to='rca.RcaBlogPage')),
                ('tag', models.ForeignKey(related_name='rca_rcablogpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('file', models.ImageField(height_field=b'height', upload_to=wagtail.wagtailimages.models.get_upload_to, width_field=b'width', verbose_name='File')),
                ('width', models.IntegerField(editable=False)),
                ('height', models.IntegerField(editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('focal_point_x', models.PositiveIntegerField(null=True, blank=True)),
                ('focal_point_y', models.PositiveIntegerField(null=True, blank=True)),
                ('focal_point_width', models.PositiveIntegerField(null=True, blank=True)),
                ('focal_point_height', models.PositiveIntegerField(null=True, blank=True)),
                ('alt', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('creator', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('year', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('medium', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('dimensions', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('permission', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('photographer', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('eprint_docid', models.CharField(max_length=255, editable=False, blank=True)),
                ('tags', taggit.managers.TaggableManager(to='taggit.Tag', through='taggit.TaggedItem', blank=True, help_text=None, verbose_name='Tags')),
                ('uploaded_by_user', models.ForeignKey(blank=True, editable=False, to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, wagtail.wagtailadmin.taggable.TagSearchable),
        ),
        migrations.CreateModel(
            name='RcaNowIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'RCA Now Index',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RcaNowPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b"This is the main text of your post. It should be a description the work, project or idea you're posting about")),
                ('author', models.CharField(help_text=b"Enter your full name as you'd like it to appear, e.g. Tom Smith", max_length=255, blank=True)),
                ('date', models.DateField(help_text=b'The date of your RCA Now post', verbose_name=b'Creation date')),
                ('programme', models.CharField(help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('school', models.CharField(help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('area', models.CharField(blank=True, help_text=b"Select an area of the College only if it's relevant to your post", max_length=255, editable=False, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'RCA Now Page',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='RcaNowPageArea',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('area', models.CharField(help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('page', modelcluster.fields.ParentalKey(related_name='areas', to='rca.RcaNowPage')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaNowPagePageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaNowPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='related_links', to='rca.RcaNowPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaNowPageTag',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('content_object', modelcluster.fields.ParentalKey(related_name='tagged_items', to='rca.RcaNowPage')),
                ('tag', models.ForeignKey(related_name='rca_rcanowpagetag_items', to='taggit.Tag')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='RcaRendition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('file', models.ImageField(height_field=b'height', width_field=b'width', upload_to=b'images')),
                ('width', models.IntegerField(editable=False)),
                ('height', models.IntegerField(editable=False)),
                ('focal_point_key', models.CharField(default=b'', max_length=255, editable=False, blank=True)),
                ('filter', models.ForeignKey(related_name='+', to='wagtailimages.Filter')),
                ('image', models.ForeignKey(related_name='renditions', to='rca.RcaImage')),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'ReachOutRCA Project Index',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ReachOutRCAIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ReachOutRCAIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAParticipants',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('participant', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'alexandraandainsworthestate', b'Alexandra and Ainsworth Estate'), (b'ashcrofttechnologyacademy', b'Ashcroft Technology Academy'), (b'bexhillcollege', b'Bexhill College'), (b'bishopdouglassschool', b'Bishop Douglass School'), (b'blackheathbluecoat', b'Blackheath Bluecoat'), (b'blanchenevileschool', b'Blanche Nevile School'), (b'bournemouthpoolefecollege', b'Bournemouth & Poole FE College'), (b'brentsidehighschool', b'Brentside High School'), (b'burntwoodschool', b'Burntwood School'), (b'cityoflondonschool', b'City of London School'), (b'claptongirlsacademy', b"Clapton Girls' Academy"), (b'cumberlandschool', b'Cumberland School'), (b'downtonlacemakers', b'Downton lace-makers'), (b'dunravenschool', b'Dunraven School'), (b'elthamhillschool', b'Eltham Hill School'), (b'erithschool', b'Erith School'), (b'ernestbevincollege', b'Ernest Bevin College'), (b'families', b'Families'), (b'foresthillschool', b'Forest Hill School'), (b'fulhamcrossgirlsschool', b"Fulham Cross Girls' School"), (b'greycoathospitalschool', b'Grey Coat Hospital School'), (b'greycourtschool', b'Grey Court School'), (b'griffinprimaryschool', b'Griffin Primary School'), (b'hasmoneanhighschool', b'Hasmonean High School'), (b'haveringsixthformcollege', b'Havering Sixth Form College'), (b'haverstockschool', b'Haverstock School'), (b'heathfieldschoolforgirls', b'Heathfield School for Girls'), (b'hendonschool', b'Hendon School'), (b'henriettabarnettschool', b'Henrietta Barnett School'), (b'highburygroveschool', b'Highbury Grove School'), (b'hollandparkschool', b'Holland Park School'), (b'horizonscentre', b'Horizons Centre'), (b'islingtonartsandmediaschool', b'Islington Arts and Media School'), (b'kingsburyhighschool', b'Kingsbury High School'), (b'newmancatholiccollege', b'Newman Catholic College'), (b'parkhighschool', b'Park High School'), (b'parkviewacademy', b'Park View Academy'), (b'pimlicoacademy', b'Pimlico Academy'), (b'queensparkcommunityschool', b'Queens Park Community School'), (b'rcastudents', b'RCA students'), (b'ripongrammarschool', b'Ripon Grammar School'), (b'refugeesandasylumseekers', b'Refugees and asylum seekers'), (b'teachers', b'Teachers'), (b'salesiancollege', b'Salesian College'), (b'salisburymuseum', b'Salisbury Museum'), (b'southendhighschoolforboys', b'Southend High School for Boys'), (b'southwarkpensionerscentre', b"Southwark Pensioners' Centre"), (b'staugustinescofeschool', b"St Augustine's C of E School"), (b'stceciliasschool', b"St Cecilia's School"), (b'stjamescatholichighschool', b"St James' Catholic High School"), (b'stmaryleboneschoolcofeschool', b'St Marylebone School C of E School'), (b'stmichaelscatholicgrammarschool', b"St Michael's Catholic Grammar School"), (b'surreysquareprimaryschool', b'Surrey Square Primary School'), (b'thecomptonschool', b'The Compton School'), (b'villiershighschool', b'Villiers High School'), (b'youngcarers', b'Young Carers'), (b'westminsteracademy', b'Westminster Academy'), (b'whitefieldschool', b'Whitefield School'), (b'williamellisschool', b'William Ellis School'), (b'woolwichpolytechnicschool', b'Woolwich Polytechnic School'), (b'wrenacademy', b'Wren Academy')])),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAPartnership',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('partnership', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'artontheunderground', b'Art on the Underground'), (b'creativequarter', b'Creative Quarter'), (b'burberryfoundation', b'Burberry Foundation'), (b'chathamhistoricdockyardtrust', b'Chatham Historic Dockyard Trust'), (b'thecraftscouncil', b'The Crafts Council'), (b'durhamwharffoundation', b'Durham Wharf Foundation'), (b'friezefoundation', b'Frieze Foundation'), (b'johnlyonscharity', b"John Lyon's Charity"), (b'mangroupplc', b'Man Group plc'), (b'therochesterbridgetrust', b'The Rochester Bridge Trust'), (b'va', b'V&A'), (b'wandsworthartsfestival', b'Wandsworth Arts Festival')])),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAProject',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('subtitle', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('year', models.CharField(help_text=b'', max_length=4, blank=True)),
                ('description', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('project', models.CharField(help_text=b'', max_length=255, choices=[(b'aperfectplacetogrow', b'A Perfect Place to Grow'), (b'artontheunderground', b'Art on the Underground'), (b'thebigdraw', b'The Big Draw'), (b'creativequarter', b'Creative Quarter'), (b'designcamp', b'Design Camp'), (b'designingthefuture', b'Designing the Future'), (b'durhamwharfresidency', b'Durham Wharf Residency'), (b'friezeartfair', b'Frieze Art Fair'), (b'helenhamlynexhibitionworkshops', b'Helen Hamlyn Exhibition workshops'), (b'makeyourownmyths', b'Make Your Own Myths'), (b'mangroupdrawingprizeworkshops', b'Man Group Drawing Prize workshops'), (b'openspace', b'Open Space'), (b'rcablack', b'RCABlack'), (b'rcasecret', b'RCASecret'), (b'revival', b'Revival'), (b'showrca', b'Show RCA'), (b'teachersstudio', b"Teachers' Studio"), (b'workinprogressshow', b'Work-in-progress Show')])),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'ReachOutRCA Project',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ReachOutRCAProjectCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAProjectLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'', blank=True)),
                ('link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='links', to='rca.ReachOutRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAQuotation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('quotation', models.TextField(help_text=b'')),
                ('quotee', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('quotee_job_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='quotations', to='rca.ReachOutRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAThemes',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('theme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'collaboration', b'Collaboration'), (b'collage', b'Collage'), (b'curating', b'Curating'), (b'drawing', b'Drawing'), (b'fashion', b'Fashion'), (b'film', b'Film'), (b'graphicdesign', b'Graphic Design'), (b'jewellery', b'Jewellery'), (b'illustration', b'Illustration'), (b'information design', b'Information Design'), (b'innovation', b'Innovation'), (b'lifedrawing', b'Life Drawing'), (b'painting', b'Painting'), (b'performance', b'Performance'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'productdesign', b'Product Design'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'), (b'writing', b'Writing')])),
                ('page', modelcluster.fields.ParentalKey(related_name='themes', to='rca.ReachOutRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAWorkshopAssistant',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('manual_person_name', models.CharField(help_text=b'Only required if the creator has no page of their own to link to', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='assistant', to='rca.ReachOutRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReachOutRCAWorkshopLeader',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('manual_person_name', models.CharField(help_text=b'Only required if the creator has no page of their own to link to', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='leader', to='rca.ReachOutRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('teasers_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('contact_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('news_carousel_area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('background_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The full bleed image in the background', null=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ResearchInnovationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageContactEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.ResearchInnovationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageContactPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.ResearchInnovationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageCurrentResearch',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
            ],
            options={
                'verbose_name': 'research innov. page current research',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchInnovationPageTeaser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('url', models.URLField(help_text=b'', blank=True)),
                ('title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='teasers', to='rca.ResearchInnovationPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchItem',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('subtitle', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('research_type', models.CharField(help_text=b'', max_length=255, choices=[(b'student', b'Student'), (b'staff', b'Staff')])),
                ('ref', models.BooleanField(default=False, help_text=b'')),
                ('year', models.CharField(help_text=b'', max_length=4)),
                ('description', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('school', models.CharField(help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('work_type', models.CharField(help_text=b'', max_length=255, choices=[(b'journalarticle', b'Journal Article'), (b'thesis', b'Thesis'), (b'booksection', b'Book Section'), (b'monograph', b'Monograph'), (b'printepublication', b'Printed Publication'), (b'conferenceorworkshop', b'Conference or Workshop'), (b'artordesignobject', b'Art or design object'), (b'showexhibitionorevent', b'Show, Exhibition or Event'), (b'teachingresource', b'Teaching Resource'), (b'residency', b'Residency'), (b'mphil_by_thesis', b'MPhil by Thesis'), (b'phd_by_thesis', b'PhD by Thesis'), (b'mphil_by_practice', b'MPhil by Practice'), (b'phd_by_practice', b'PhD by Practice'), (b'other', b'Other (enter below)')])),
                ('work_type_other', models.CharField(help_text=b'', max_length=255, verbose_name=b"'Other' work type", blank=True)),
                ('theme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'culturesofcurating', b'Cultures of Curating'), (b'designinnovationandsociety', b'Design, Innovation and Society'), (b'dialoguesofformandsurface', b'Dialogues of Form and Surface'), (b'imageandlanguage', b'Image and Language')])),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('eprintid', models.CharField(max_length=255, editable=False, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ResearchItemCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchItemCreator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('manual_person_name', models.CharField(help_text=b'Only required if the creator has no page of their own to link to', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='creator', to='rca.ResearchItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchItemLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('link_text', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='links', to='rca.ResearchItem')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ResearchStudentIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle, hashtag or search term', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ResearchStudentIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ResearchStudentIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReusableTextSnippet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(help_text=b'', max_length=255)),
                ('text', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
            ],
            options={
                'permissions': (('change_reusabletextsnippet', 'Can edit reusable text snippets'),),
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReusableTextSnippetPlacement',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('strapline', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('middle_column_body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('date', models.DateField(help_text=b'', null=True, blank=True)),
                ('author', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('listing_intro', models.CharField(help_text=b'Used only on pages listing jobs', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ReviewPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ReviewPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPageImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('image', models.ForeignKey(related_name='+', blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='images', to='rca.ReviewPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPageQuotation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('quotation', models.TextField(help_text=b'')),
                ('quotee', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('quotee_job_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='quotations', to='rca.ReviewPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPageRelatedDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('document_name', models.CharField(help_text=b'', max_length=255)),
                ('document', models.ForeignKey(related_name='+', blank=True, to='wagtaildocs.Document', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='documents', to='rca.ReviewPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='ReviewsIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle, hashtag or search term', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='ReviewsIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.ReviewsIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('collapse_upcoming_events', models.BooleanField(default=False, help_text=b'')),
                ('school', models.CharField(help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('head_of_school_statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('contact_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('head_of_research_statement', wagtail.wagtailcore.fields.RichTextField(help_text=b'', null=True, blank=True)),
                ('background_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The full bleed image in the background', null=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SchoolPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.SchoolPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPageContactEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.SchoolPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPageContactPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.SchoolPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPageContactTelEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('email', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_tel_email', to='rca.SchoolPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SchoolPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StaffIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StaffIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.StaffIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StaffPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('school', models.CharField(blank=True, help_text=b'Please complete this field for academic and administrative staff only', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('staff_type', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'academic', b'Academic'), (b'technical', b'Technical'), (b'administrative', b'Administrative')])),
                ('staff_location', models.CharField(blank=True, help_text=b'Please complete this field for technical staff only', max_length=255, choices=[(b'ceramicsgsmj', b'Ceramics, Glass, Metalwork & Jewellery'), (b'darwinworshops', b'Darwin Workshops'), (b'fashiontextiles', b'Fashion & Textiles'), (b'lensbasedmediaaudio', b'Lens-based Media and Audio'), (b'paintingsculpture', b'Painting & Sculpture'), (b'printmakingletterpress', b'Printmaking & Letterpress'), (b'rapidform', b'Rapidform')])),
                ('twitter_feed', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('biography', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('practice', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('publications_exhibtions_and_other_outcomes_placeholder', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('external_collaborations_placeholder', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('current_recent_research', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('awards_and_grants', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('show_on_programme_page', models.BooleanField(help_text=b'')),
                ('listing_intro', models.CharField(help_text=b'Used only on pages displaying a list of pages of this type', max_length=100, blank=True)),
                ('research_interests', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('title_prefix', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('first_name', models.CharField(help_text=b'', max_length=255)),
                ('last_name', models.CharField(help_text=b'', max_length=255)),
                ('supervised_student_other', models.CharField(help_text=b"Enter names of research students here who don't have a student profile. Supervised students with profile pages are pulled in automatically.", max_length=255, blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('profile_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StaffPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StaffPageCollaborations',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('title', models.CharField(help_text=b'', max_length=255)),
                ('link', models.URLField(help_text=b'')),
                ('text', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('date', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='collaborations', to='rca.StaffPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StaffPagePublicationExhibition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('title', models.CharField(help_text=b'', max_length=255)),
                ('typeof', models.CharField(help_text=b'', max_length=255, verbose_name=b'Type', choices=[(b'publication', b'Publication'), (b'exhibition', b'Exhibition')])),
                ('location_year', models.CharField(help_text=b'', max_length=255, verbose_name=b'Location and year')),
                ('authors_collaborators', models.TextField(help_text=b'', verbose_name=b'Authors/collaborators', blank=True)),
                ('link', models.URLField(help_text=b'', blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='publications_exhibitions', to='rca.StaffPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StaffPageRole',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('title', models.CharField(help_text=b'', max_length=255)),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA'), (b'performance', b'Performance'), (b'moving-image', b'Moving image')])),
                ('email', models.EmailField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='roles', to='rca.StaffPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('exclude_twitter_block', models.BooleanField(default=False, help_text=b'')),
                ('exclude_events_sidebar', models.BooleanField(default=False, help_text=b'')),
                ('exclude_global_adverts', models.BooleanField(default=False, help_text=b'')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('collapse_upcoming_events', models.BooleanField(default=False, help_text=b'')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('strapline', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('teasers_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('contact_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('contact_address', models.TextField(help_text=b'', blank=True)),
                ('contact_link', models.URLField(help_text=b'', blank=True)),
                ('contact_link_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('news_carousel_area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA')])),
                ('staff_feed_source', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('show_events_feed', models.BooleanField(default=False, help_text=b'')),
                ('events_feed_area', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'administration', b'Administration'), (b'alumnirca', b'AlumniRCA'), (b'communicationsmarketing', b'Communications & Marketing'), (b'development', b'Development'), (b'drawingstudio', b'Drawing Studio'), (b'executiveeducation', b'Executive Education'), (b'fuelrca', b'Fuel RCA'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'informationlearningtechnicalservices', b'Information, Learning & Technical Services'), (b'innovationrca', b'InnovationRCA'), (b'reachoutrca', b'ReachOutRCA'), (b'research-knowledgeexchange', b'Research, Knowledge Exchange & Innovation'), (b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'showrca', b'Show RCA'), (b'support', b'Support'), (b'sustainrca', b'SustainRCA'), (b'alumnirca', b'AlumniRCA')])),
                ('hide_body', models.BooleanField(default=True, help_text=b'')),
                ('background_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The full bleed image in the background', null=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StandardIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexContactEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email_address', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_email', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexContactPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone_number', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_phone', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexContactSnippet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('contact_snippet', models.ForeignKey(related_name='+', to='rca.ContactSnippet', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='contact_snippets', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexCustomContentModules',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('custom_content_module', models.ForeignKey(related_name='+', to='rca.CustomContentModule', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='custom_content_modules', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexOurSites',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('url', models.URLField(help_text=b'')),
                ('site_name', models.CharField(help_text=b'', max_length=255)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='our_sites', to='rca.StandardIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexStaffFeed',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('staff_role', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_staff_feed', to='rca.StandardIndex')),
                ('staff', models.ForeignKey(related_name='+', blank=True, to='rca.StaffPage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardIndexTeaser',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('external_link', models.URLField(help_text=b'Used only if the (internal) link above is not defined.', blank=True)),
                ('title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('collapse_upcoming_events', models.BooleanField(default=False, help_text=b'')),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('strapline', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('middle_column_body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('related_school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('related_programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StandardPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.StandardPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageImage',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('image', models.ForeignKey(related_name='+', blank=True, to='rca.RcaImage', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='images', to='rca.StandardPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageQuotation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('quotation', models.TextField(help_text=b'')),
                ('quotee', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('quotee_job_title', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='quotations', to='rca.StandardPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageRelatedDocument',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('document_name', models.CharField(help_text=b'', max_length=255)),
                ('document', models.ForeignKey(related_name='+', blank=True, to='wagtaildocs.Document', help_text=b'', null=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='documents', to='rca.StandardPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StandardPageReusableTextSnippet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='reusable_text_snippets', to='rca.StandardPage')),
                ('reusable_text_snippet', models.ForeignKey(related_name='+', to='rca.ReusableTextSnippet', help_text=b'')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StreamPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('poster_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StreamPageAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.StreamPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StreamPageRelatedLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link_external', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('link_text', models.CharField(help_text=b'Link title (or leave blank to use page title', max_length=255, blank=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPage',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('school', models.CharField(max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('degree_qualification', models.CharField(max_length=255, choices=[(b'ma', b'MA'), (b'mphil', b'MPhil'), (b'phd', b'PhD'), (b'researchstudent', b'Research Student'), (b'innovationrca-fellow', b'InnovationRCA Fellow')])),
                ('degree_subject', models.CharField(max_length=255, choices=[(b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'drawingstudio', b'Drawing Studio'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'industrialdesignengineering', b'Industrial Design Engineering'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'), (b'curatingcontemporaryartcollegebased', b'Curating Contemporary Art (College-based)'), (b'curatingcontemporaryartworkbased', b'Curating Contemporary Art (Work-based)')])),
                ('degree_year', models.CharField(max_length=4, blank=True)),
                ('graduation_year', models.CharField(help_text=b'This field should only be filled in for students whose courses are more than 1 year. Should be filled in after graduation.', max_length=4, blank=True)),
                ('specialism', models.CharField(max_length=255, blank=True)),
                ('statement', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('work_description', wagtail.wagtailcore.fields.RichTextField(blank=True)),
                ('work_type', models.CharField(blank=True, max_length=255, choices=[(b'journalarticle', b'Journal Article'), (b'thesis', b'Thesis'), (b'booksection', b'Book Section'), (b'monograph', b'Monograph'), (b'printepublication', b'Printed Publication'), (b'conferenceorworkshop', b'Conference or Workshop'), (b'artordesignobject', b'Art or design object'), (b'showexhibitionorevent', b'Show, Exhibition or Event'), (b'teachingresource', b'Teaching Resource'), (b'residency', b'Residency'), (b'mphil_by_thesis', b'MPhil by Thesis'), (b'phd_by_thesis', b'PhD by Thesis'), (b'mphil_by_practice', b'MPhil by Practice'), (b'phd_by_practice', b'PhD by Practice'), (b'other', b'Other (enter below)')])),
                ('work_location', models.CharField(blank=True, max_length=255, choices=[(b'kensington', b'Kensington'), (b'battersea', b'Battersea')])),
                ('work_awards', models.CharField(max_length=255, verbose_name=b'Show RCA work awards', blank=True)),
                ('funding', models.CharField(max_length=255, blank=True)),
                ('student_twitter_feed', models.CharField(help_text=b'Enter Twitter handle without @ symbol.', max_length=255, blank=True)),
                ('twitter_feed', models.CharField(max_length=255, blank=True)),
                ('rca_content_id', models.CharField(max_length=255, editable=False, blank=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('show_on_homepage', models.BooleanField()),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('profile_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='StudentPageAwards',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('award', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='awards', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageConference',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='conferences', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageContactsEmail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('email', models.EmailField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='email', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageContactsPhone',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('phone', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='phone', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageContactsWebsite',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('website', models.URLField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='website', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageDegree',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('degree', models.CharField(max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='degrees', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageExhibition',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('exhibition', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='exhibitions', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageExperience',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('experience', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='experiences', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPagePublication',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='publications', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageSupervisor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('supervisor_other', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='supervisors', to='rca.StudentPage')),
                ('supervisor', models.ForeignKey(related_name='+', blank=True, to='rca.StaffPage', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageWorkCollaborator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='collaborators', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='StudentPageWorkSponsor',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('name', models.CharField(max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='sponsor', to='rca.StudentPage')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SustainRCAIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'SustainRCA Project Index',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SustainRCAIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.SustainRCAIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SustainRCAProject',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('subtitle', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('category', models.CharField(blank=True, max_length=255, choices=[(b'solutionsforsociety', b'Solutions for Society'), (b'inspiredproducts', b'Inspired Products'), (b'visionaryprocess', b'Visionary Process'), (b'movingminds', b'Moving Minds')])),
                ('year', models.CharField(help_text=b'', max_length=4, blank=True)),
                ('description', wagtail.wagtailcore.fields.RichTextField(help_text=b'')),
                ('school', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'schoolofarchitecture', b'School of Architecture'), (b'schoolofcommunication', b'School of Communication'), (b'schoolofdesign', b'School of Design'), (b'schooloffineart', b'School of Fine Art'), (b'schoolofhumanities', b'School of Humanities'), (b'schoolofmaterial', b'School of Material'), (b'helenhamlyn', b'The Helen Hamlyn Centre for Design'), (b'rectorate', b'Rectorate'), (b'innovationrca', b'InnovationRCA')])),
                ('programme', models.CharField(blank=True, help_text=b'', max_length=255, choices=[(b'2015', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2014', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'globalinnovationdesign', b'Global Innovation Design'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'informationexperiencedesign', b'Information Experience Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'interiordesign', b'Interior Design'), (b'jewelleryandmetal', b'Jewellery & Metal'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2013', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'servicedesign', b'Service Design'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2012', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'), (b'visualcommunication', b'Visual Communication'))), (b'2011', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2010', ((b'animation', b'Animation'), (b'architecture', b'Architecture'), (b'ceramicsglass', b'Ceramics & Glass'), (b'communicationartdesign', b'Communication Art & Design'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'criticalwritinginartdesign', b'Critical Writing in Art & Design'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'designinteractions', b'Design Interactions'), (b'designproducts', b'Design Products'), (b'fashionmenswear', b'Fashion Menswear'), (b'fashionwomenswear', b'Fashion Womenswear'), (b'goldsmithingsilversmithingmetalworkjewellery', b'Goldsmithing, Silversmithing, Metalwork & Jewellery'), (b'historyofdesign', b'History of Design'), (b'innovationdesignengineering', b'Innovation Design Engineering'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'), (b'textiles', b'Textiles'), (b'vehicledesign', b'Vehicle Design'))), (b'2009', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2008', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture'))), (b'2007', ((b'animation', b'Animation'), (b'communicationartdesign', b'Communication Art & Design'), (b'conservation', b'Conservation'), (b'criticalhistoricalstudies', b'Critical & Historical Studies'), (b'curatingcontemporaryart', b'Curating Contemporary Art'), (b'historyofdesign', b'History of Design'), (b'painting', b'Painting'), (b'photography', b'Photography'), (b'printmaking', b'Printmaking'), (b'sculpture', b'Sculpture')))])),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle (without the @ symbol)', max_length=255, blank=True)),
                ('show_on_homepage', models.BooleanField(help_text=b'')),
                ('random_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'verbose_name': 'SustainRCA Project',
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='SustainRCAProjectCarouselItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('overlay_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('link', models.URLField(help_text=b'', verbose_name=b'External link', blank=True)),
                ('embedly_url', models.URLField(help_text=b'', verbose_name=b'Vimeo URL', blank=True)),
                ('image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SustainRCAProjectCreator',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('manual_person_name', models.CharField(help_text=b'Only required if the creator has no page of their own to link to', max_length=255, blank=True)),
                ('page', modelcluster.fields.ParentalKey(related_name='creator', to='rca.SustainRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SustainRCAProjectLink',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('link', models.URLField(help_text=b'')),
                ('link_text', models.CharField(help_text=b'', max_length=255)),
                ('page', modelcluster.fields.ParentalKey(related_name='links', to='rca.SustainRCAProject')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='TalksIndex',
            fields=[
                ('page_ptr', models.OneToOneField(parent_link=True, auto_created=True, primary_key=True, serialize=False, to='wagtailcore.Page')),
                ('social_text', models.CharField(help_text=b'', max_length=255, blank=True)),
                ('intro', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('body', wagtail.wagtailcore.fields.RichTextField(help_text=b'', blank=True)),
                ('twitter_feed', models.CharField(help_text=b'Replace the default Twitter feed by providing an alternative Twitter handle, hashtag or search term', max_length=255, blank=True)),
                ('feed_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True)),
                ('social_image', models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='TalksIndexAd',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sort_order', models.IntegerField(null=True, editable=False, blank=True)),
                ('ad', models.ForeignKey(related_name='+', to='rca.Advert', help_text=b'')),
                ('page', modelcluster.fields.ParentalKey(related_name='manual_adverts', to='rca.TalksIndex')),
            ],
            options={
                'ordering': ['sort_order'],
                'abstract': False,
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='sustainrcaprojectcreator',
            name='person',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b"Choose an existing person's page, or enter a name manually below (which will not be linked).", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sustainrcaprojectcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sustainrcaprojectcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.SustainRCAProject'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='sustainrcaprojectcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='studentpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='studentpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.StudentPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='studentpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='streampagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='streampagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.StreamPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardpagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.StandardPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.StandardPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexteaser',
            name='link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexteaser',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='teasers', to='rca.StandardIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexrelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexrelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.StandardIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.StandardIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindexcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindex',
            name='intro_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='standardindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='staffpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='staffpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.StaffPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='staffpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.SchoolPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.SchoolPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpage',
            name='head_of_research',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.StaffPage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpage',
            name='head_of_research_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpage',
            name='head_of_school',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.StaffPage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpage',
            name='head_of_school_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='schoolpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reviewpagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reviewpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.ReviewPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reviewpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reviewpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.ReviewPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reviewpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reusabletextsnippetplacement',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='reusable_text_snippet_placements', to='wagtailcore.Page'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reusabletextsnippetplacement',
            name='reusable_text_snippet',
            field=models.ForeignKey(related_name='+', to='rca.ReusableTextSnippet', help_text=b''),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchitemcreator',
            name='person',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b"Choose an existing person's page, or enter a name manually below (which will not be linked).", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchitemcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchitemcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.ResearchItem'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchitemcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.ResearchInnovationPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagecurrentresearch',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagecurrentresearch',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='current_research', to='rca.ResearchInnovationPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.ResearchInnovationPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpage',
            name='intro_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='researchinnovationpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaworkshopleader',
            name='person',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'Only required if the creator has no page of their own to link to', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaworkshopassistant',
            name='person',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'Only required if the creator has no page of their own to link to', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaprojectcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaprojectcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.ReachOutRCAProject'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaprojectcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcapartnership',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='partnerships', to='rca.ReachOutRCAProject'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='reachoutrcaparticipants',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='participants', to='rca.ReachOutRCAProject'),
            preserve_default=True,
        ),
        migrations.AlterUniqueTogether(
            name='rcarendition',
            unique_together=set([('image', 'filter', 'focal_point_key')]),
        ),
        migrations.AddField(
            model_name='rcanowpagepagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcanowpagepagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.RcaNowPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcanowpagepagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcanowpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(to='taggit.Tag', through='rca.RcaNowPageTag', help_text='A comma-separated list of tags.', verbose_name='Tags'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpagepagecarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpagepagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpagepagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.RcaBlogPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpagepagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogpage',
            name='tags',
            field=modelcluster.contrib.taggit.ClusterTaggableManager(to='taggit.Tag', through='rca.RcaBlogPageTag', help_text='A comma-separated list of tags.', verbose_name='Tags'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='rcablogindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagestudentstory',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagestudentstory',
            name='link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagestudentstory',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='student_stories', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepageoursites',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepageoursites',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='our_sites', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagemanualstafffeed',
            name='staff',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.StaffPage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagefacilitiescarouselitem',
            name='facilities_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagefacilitiescarouselitem',
            name='facilities_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagefacilitiescarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='facilities_carousel_items', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagecarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='background_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The full bleed image in the background', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='facilities_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, editable=False, to='rca.RcaImage', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='facilities_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, editable=False, to='wagtailcore.Page', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='head_of_programme',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.StaffPage', help_text=b'Select the profile page of the Head of this programme.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='head_of_programme_link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'The link to the Head of Programme Welcome Page', null=True, verbose_name=b'Head(s) of programme link'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='head_of_programme_second',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.StaffPage', help_text=b'Select the profile page of another head of this programme.', null=True, verbose_name=b'Second head of programme'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='programme_video_poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The poster image for the programme video', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmepage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='programmedocuments',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='documents', to='rca.ProgrammePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleaseindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleaseindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleasecarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleasecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleasecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.PressRelease'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressreleasecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressrelease',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='pressrelease',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='oeformpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='oeformpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpageshowcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpageshowcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpageshowcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='show_carousel_items', to='rca.NewStudentPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpageshowcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagephdsupervisor',
            name='supervisor',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.StaffPage', help_text=b"Search for your RCA supervisor's staff page ", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagephdcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagephdcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagephdcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='phd_carousel_items', to='rca.NewStudentPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagephdcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagemphilsupervisor',
            name='supervisor',
            field=models.ForeignKey(related_name='+', blank=True, to='rca.StaffPage', help_text=b"Search for your RCA supervisor's staff page ", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagemphilcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagemphilcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagemphilcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='mphil_carousel_items', to='rca.NewStudentPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpagemphilcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'This image displays in content feeds, such as the news carousel. Should be 16:9 aspect ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpage',
            name='postcard_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b"Image will be used to print a set of postcards with your contact details, for you to use during the show. The image will not appear in your Show online catalogue. Image must be A6 plus 2mm 'bleed' on each edge (152 x 109mm or 1795 x 1287px @ 300 dpi).  This must be uploaded at the correct size and before the deadline for postcards to be printed.", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpage',
            name='profile_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'Self-portrait image, square, 500x500 pixels', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newstudentpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitemcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitemcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitemcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.NewsItem'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitemcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitem',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsitem',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='newsindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobsindexrelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobsindexrelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.JobsIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobsindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobsindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobpagereusabletextsnippet',
            name='reusable_text_snippet',
            field=models.ForeignKey(related_name='+', to='rca.ReusableTextSnippet', help_text=b''),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='jobpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaprojectcreator',
            name='person',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b"Choose an existing person's page, or enter a name manually below (which will not be linked).", null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaprojectcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaprojectcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaprojectcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.InnovationRCAProject'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaprojectcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaproject',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaproject',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='innovationrcaindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.HomePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagecarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagecarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagecarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.HomePage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepagecarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepage',
            name='background_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The full bleed image in the background', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepage',
            name='news_item_1',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepage',
            name='news_item_2',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='homepage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gallerypagerelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gallerypagerelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.GalleryPage'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gallerypage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='gallerypage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemspeaker',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemspeaker',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemspeaker',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='speakers', to='rca.EventItem'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemcarouselitem',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemcarouselitem',
            name='link_page',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemcarouselitem',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='carousel_items', to='rca.EventItem'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitemcarouselitem',
            name='poster_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitem',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventitem',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventindexrelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventindexrelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.EventIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='eventindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='donationpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='donationpage',
            name='redirect_to_when_done',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.PROTECT, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='donationpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='customecontentmoduleplacement',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='custom_content_module_placements', to='wagtailcore.Page'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='customcontentmoduleblock',
            name='image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image for the module block', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='customcontentmoduleblock',
            name='link',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='currentresearchpage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='currentresearchpage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contactuspage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contactuspage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='contactsnippetplacement',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='contact_snippet_placements', to='wagtailcore.Page'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumnipage',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumnipage',
            name='profile_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumnipage',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumniindexrelatedlink',
            name='link',
            field=models.ForeignKey(related_name='+', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumniindexrelatedlink',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='related_links', to='rca.AlumniIndex'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumniindex',
            name='feed_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'The image displayed in content feeds, such as the news carousel. Should be 16:9 ratio.', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='alumniindex',
            name='social_image',
            field=models.ForeignKey(related_name='+', on_delete=django.db.models.deletion.SET_NULL, blank=True, to='rca.RcaImage', help_text=b'', null=True),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='advertplacement',
            name='page',
            field=modelcluster.fields.ParentalKey(related_name='advert_placements', to='wagtailcore.Page'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='advert',
            name='page',
            field=models.ForeignKey(related_name='adverts', blank=True, to='wagtailcore.Page', help_text=b'', null=True),
            preserve_default=True,
        ),
    ]
